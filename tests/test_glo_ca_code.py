# -*- coding: utf-8 -*-

# Copyright (C) 2016 Swift Navigation Inc.
#
# Contact: Pasi Miettinen <pasi.miettinen@exafore.com>
# This source is subject to the license found in the file 'LICENSE' which must
# be be distributed together with this source. All other rights reserved.
#
# THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
# EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.

from peregrine.include.glo_ca_code import value

import numpy as np


def test_glo_ca_code():

  code = np.array(
    [-1, -1, -1, -1, -1, -1, -1,  1,  1,  1,  1,  1, -1, -1, -1, -1,  1,
     -1, -1, -1, -1, -1,  1,  1,  1, -1,  1, -1, -1, -1,  1,  1, -1, -1,
      1,  1, -1,  1,  1,  1,  1,  1, -1,  1,  1, -1,  1, -1,  1,  1, -1,
     -1, -1,  1, -1, -1,  1, -1,  1,  1,  1, -1, -1, -1, -1,  1,  1, -1,
     -1, -1, -1, -1,  1,  1, -1, -1,  1, -1, -1,  1,  1,  1, -1,  1, -1,
      1, -1,  1,  1, -1,  1,  1,  1, -1, -1, -1,  1,  1,  1, -1, -1,  1,
     -1, -1,  1, -1,  1, -1,  1, -1, -1, -1,  1,  1,  1, -1,  1,  1, -1,
     -1,  1,  1,  1, -1,  1,  1,  1, -1,  1,  1,  1,  1,  1,  1,  1,  1,
     -1,  1,  1,  1,  1, -1,  1,  1,  1, -1, -1,  1,  1,  1,  1, -1,  1,
      1, -1, -1, -1,  1,  1, -1,  1, -1,  1, -1,  1, -1, -1,  1,  1,  1,
      1, -1, -1,  1, -1, -1, -1, -1,  1, -1,  1,  1, -1, -1,  1, -1, -1,
     -1,  1,  1, -1,  1,  1,  1, -1,  1, -1,  1,  1,  1,  1, -1,  1, -1,
      1, -1, -1,  1, -1,  1,  1, -1, -1, -1, -1, -1, -1,  1, -1, -1,  1,
      1, -1,  1,  1, -1,  1,  1, -1,  1, -1, -1,  1, -1, -1, -1, -1, -1,
     -1,  1,  1, -1,  1,  1, -1, -1,  1, -1,  1, -1,  1,  1, -1, -1,  1,
      1, -1, -1,  1,  1,  1,  1,  1,  1,  1, -1, -1,  1,  1,  1, -1, -1,
      1,  1, -1,  1, -1,  1,  1,  1, -1, -1,  1, -1,  1,  1, -1,  1, -1,
     -1, -1, -1, -1, -1, -1,  1, -1,  1,  1,  1, -1,  1, -1, -1,  1,  1,
      1, -1, -1, -1,  1, -1,  1, -1, -1,  1,  1, -1,  1, -1, -1,  1,  1,
     -1, -1, -1, -1,  1,  1,  1, -1, -1, -1, -1, -1,  1, -1, -1, -1,  1,
     -1,  1,  1,  1,  1,  1, -1, -1,  1, -1,  1, -1, -1,  1, -1, -1,  1,
     -1, -1, -1,  1, -1, -1,  1,  1,  1,  1,  1, -1,  1, -1, -1,  1, -1,
      1, -1, -1, -1, -1, -1,  1, -1,  1, -1,  1, -1,  1, -1,  1,  1,  1,
      1,  1,  1, -1,  1, -1,  1,  1, -1,  1, -1,  1, -1, -1, -1, -1,  1,
      1, -1,  1, -1, -1, -1,  1, -1, -1, -1,  1,  1,  1,  1,  1,  1, -1,
     -1, -1,  1,  1, -1, -1, -1,  1, -1,  1,  1, -1,  1,  1, -1, -1, -1,
     -1,  1, -1,  1, -1, -1, -1,  1, -1,  1, -1,  1,  1,  1, -1,  1,  1,
     -1,  1,  1,  1,  1, -1, -1,  1,  1, -1, -1, -1,  1,  1,  1,  1, -1,
      1, -1, -1, -1, -1,  1, -1, -1,  1, -1, -1,  1,  1, -1, -1,  1, -1,
      1,  1,  1,  1, -1, -1, -1,  1, -1, -1, -1, -1,  1,  1,  1,  1, -1,
     -1], dtype=np.int8)

  assert((code == value).all())
